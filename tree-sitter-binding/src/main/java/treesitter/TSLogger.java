package treesitter;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class TSLogger extends Structure {
	/** C type : void* */
	public Pointer payload;
	/** C type : log_callback* */
	public TSLogger.log_callback log;
	public interface log_callback extends Callback {
		void apply(Pointer payload, int log_type, Pointer buffer);
	};
	public TSLogger() {
		super();
	}
	protected List<String> getFieldOrder(){
		return Arrays.asList("payload", "log");
	}
	/**
	 * @param payload C type : void*<br>
	 * @param log C type : log_callback*
	 */
	public TSLogger(Pointer payload, TSLogger.log_callback log) {
		super();
		this.payload = payload;
		this.log = log;
	}
	public static class ByReference extends TSLogger implements Structure.ByReference {
		
	};
	public static class ByValue extends TSLogger implements Structure.ByValue {
		
	};
}
